/*! Angular Chat, Nonni Danni Jorri  23-02-2015 */
angular.module("angularChat",["ngRoute"]),angular.module("angularChat").config(["$routeProvider",function($routeProvider){$routeProvider.when("/home",{templateUrl:"src/partials/home.html",controller:"HomeController"}).when("/room/:userID/:roomID",{templateUrl:"src/partials/room.html",controller:"RoomController"}).when("/rooms/:userID",{templateUrl:"src/partials/rooms.html",controller:"RoomsController"}).when("/rooms/:userID/newroom",{templateUrl:"src/partials/newroom.html",controller:"RoomsController"}).otherwise({redirectTo:"/home"})}]),angular.module("angularChat").controller("HomeController",["$scope","$http","$location","$rootScope","$routeParams","socket",function($scope,$http,$location,$rootScope,$routeParams,socket){$scope.errorMsg="",$scope.nickname="",$scope.login=function(){""===$scope.nickname?$scope.errorMsg="Please choose a nickname!":socket.emit("adduser",$scope.nickname,function(available){available?$location.path("/rooms/"+$scope.nickname):$scope.errorMsg="This nickname is already in use - please choose another!"})}}]),angular.module("angularChat").filter("prvtChat",function(){return function(messages,sender,reciever){for(var out=[],i=0;i<messages.length;i++)messages[i].prvt&&(messages[i].nick===sender&&messages[i].recipient===reciever||messages[i].recipient===sender&&messages[i].nick===reciever)&&out.push(messages[i]);return out}}),angular.module("angularChat").controller("RoomController",["$scope","$routeParams","socket","$location","$route",function($scope,$routeParams,socket,$location){$scope.roomID=$routeParams.roomID,$scope.currentUser=$routeParams.userID,socket.on("updatetopic",function(room,roomtopic){$scope.roomTopic=roomtopic}),$scope.filt=$scope.query,$scope.prvtMessages=[],$scope.messages=[],$scope.msg_recipient="",$scope.newMessage=!1,socket.on("updatechat",function(room,messageHistory){$scope.messages=messageHistory}),socket.on("recv_privatemsg",function(messageHistoryPrivate){messageHistoryPrivate[messageHistoryPrivate.length-1].recipient===$scope.currentUser&&($scope.newMessage=!0,$scope.msg_recipient=messageHistoryPrivate[messageHistoryPrivate.length-1].nick),$scope.prvtMessages=messageHistoryPrivate}),socket.on("updateusers",function(room,userList,opList){$scope.roomID===room&&($scope.roommates=Object.keys(userList),$scope.roomops=Object.keys(opList),$scope.opObj=opList)}),socket.on("updatebanlist",function(banlist){$scope.banlist=banlist,console.log("banlist: ",banlist)}),$scope.inputMsg="",$scope.sendMsg=function(){if(""===$scope.inputMsg);else{console.log($scope.roomID);var input={roomName:$scope.roomID,msg:$scope.inputMsg};socket.emit("sendmsg",input)}$scope.inputMsg=""},$scope.inputPrvtMsg="",$scope.set_recipient=function(recipient){$scope.newMessage=!1,$scope.msg_recipient=recipient},$scope.sendPrvtMsg=function(){if($scope.newMessage=!1,""!==$scope.inputPrvtMsg){var msg={nick:$scope.msg_recipient,message:$scope.inputPrvtMsg};socket.emit("privatemsg",msg,function(sent){sent?($scope.inputPrvtMsg="",console.log("PM: Success")):console.log("PM: Failure")})}},$scope.leave=function(){socket.emit("partroom",$scope.roomID),$location.path("/rooms/"+$routeParams.userID)},$scope.disconnect=function(){socket.emit("disco-nnects"),$location.path("/home")},$scope.$on("$destroy",function(){$scope.leave()}),$scope.kick=function(mate){$scope.userKicked=mate,console.log("mate: ",mate);var kickObj={user:mate,room:$scope.roomID};socket.emit("kick",kickObj,function(allowed){})},$scope.ban=function(mate){$scope.userBanned=mate,console.log("mate: ",mate);var banObj={user:mate,room:$scope.roomID};socket.emit("ban",banObj,function(allowed){})},socket.on("banned",function(room,bannedUser){bannedUser===$scope.currentUser&&$location.path("/rooms/"+bannedUser)}),socket.on("kicked",function(room,kickedUser){kickedUser==$scope.currentUser&&$location.path("/rooms/"+kickedUser)}),$scope.promotedMessage="",console.log("promtemess: ",$scope.promotedMessage),socket.on("opped",function(room,oppedUser,username){oppedUser===$scope.currentUser&&($scope.promotedMessage="You got promoted by "+username+"!",console.log("inside here!!"),console.log("promtemess: ",$scope.promotedMessage))}),$scope.unban=function(banmate){var unbanObj={user:banmate,room:$scope.roomID};socket.emit("unban",unbanObj,function(allowed){})},$scope.promote=function(mate){$scope.userPromoted=mate,console.log("mate: ",mate);var opObj={user:mate,room:$scope.roomID};socket.emit("op",opObj,function(allowed){})}}]),angular.module("angularChat").controller("RoomsController",["$scope","$routeParams","$location","socket","$route",function($scope,$routeParams,$location,socket,$route){$scope.currentUser=$routeParams.userID,socket.emit("rooms"),socket.on("roomlist",function(data){$scope.rooms=Object.keys(data),$scope.roomObj=data}),$scope.newRoom=function(){$location.path("/rooms/"+$scope.currentUser+"/newroom")},$scope.newRoomName="",$scope.newRoomTopic="",$scope.newRoomPass=void 0,$scope.errorMsg="",$scope.joinRoom=function(roomID){var joinObj;if(void 0===roomID){if(""===$scope.newRoomName)return void($scope.errorMsg="Please choose a name for the room!");if(""===$scope.newRoomTopic)return void($scope.errorMsg="Please choose a topic for the room!");joinObj={room:$scope.newRoomName,pass:$scope.newRoomPass,topic:$scope.newRoomTopic}}else joinObj={room:roomID,pass:""};socket.emit("joinroom",joinObj,function(accepted){accepted&&(socket.emit("rooms"),$location.path("/room/"+$scope.currentUser+"/"+joinObj.room))})},$scope.disconnect=function(){socket.emit("disco-nnects"),$location.path("/home")},$scope.bannedMessage="",$scope.kickedMessage="",$scope.unbanMessage="",console.log("yes",$scope.unbanMessage),socket.on("unbanned",function(room,unbannedUser){unbannedUser===$scope.currentUser&&$route.reload()}),socket.on("unbanneduserfeedback",function(room,unbannedUser,username){unbannedUser===$scope.currentUser&&($scope.unbanMessage="You just got unbanned from "+room+" by "+username+".")}),socket.on("banneduserfeedback",function(room,bannedUser,username){bannedUser===$scope.currentUser&&($scope.bannedMessage="You just got banned from "+room+" by "+username+".")}),socket.on("kickeduserfeedback",function(room,kickeduser,username){kickeduser===$scope.currentUser&&($scope.kickedMessage="You just got kicked from "+room+" by "+username+".")})}]),angular.module("angularChat").factory("socket",function($rootScope){var socket=io.connect("http://localhost:8080");return{on:function(eventName,callback){socket.on(eventName,function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})})},emit:function(eventName,data,callback){socket.emit(eventName,data,function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})})}}});